name: CI
on:
  push:
    branches:
    - main
  pull_request:

permissions:
  contents: read

jobs:
  win:

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os:
          - ubuntu-latest
          - ubuntu-24.04-arm
          - windows-latest

    name: ${{ matrix.os }} / python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    env:
      # Needed to ignore specific warns, otherwise, it'll warn a generic message
      SQLALCHEMY_WARN_20: 1

    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
          cache: 'pip'
          cache-dependency-path: |
            requirements-ci.txt
            requirements-cidb.txt
            master/setup.py
            worker/setup.py
            pkg/setup.py

      - name: "Install dependencies"
        run: |
          python -c "import sys; print(sys.prefix)"
          python -c "import sys; print(sys.exec_prefix)"
          python -c "import sys; print(sys.executable)"
          python -V -V
          python -m pip install -r requirements-pip.txt
          python -m pip install -r requirements-ci.txt
          python -m pip list

      - name: "Check PyWin32"
        if: ${{ matrix.os=='windows-latest' }}
        run: |
          # Check that pywin32 is properly installed
          python -c "import win32api"

      - name: "Run tests for ${{ matrix.python-version }}"
        run: "python -m twisted.trial --reporter=text --rterrors buildbot.test buildbot_worker.test"
        timeout-minutes: 30

  win-sandboxed-worker:
    runs-on: windows-latest

    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-python@v5"
        with:
          python-version: ">=3"
          cache: 'pip'
          cache-dependency-path: |
            requirements-pip.txt
            requirements-ci.txt
            requirements-ci-pyinstaller.txt
            master/setup.py
            worker/setup.py
            pkg/setup.py

      - name: "Install dependencies"
        run: |
          python -m pip install -r requirements-pip.txt
          python -m pip install -r requirements-ci-pyinstaller.txt
      - run: pyinstaller pyinstaller/buildbot-worker.spec
      - run: trial --reporter=text --rterrors buildbot.test.integration.interop
        env:
          SANDBOXED_WORKER_PATH: "${{ github.workspace }}/dist/buildbot-worker.exe"
